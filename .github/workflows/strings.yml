name: Strings

on:
  push:
    branches: [ master, ci-test ]
    paths: 
      - '**/strings.xml'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  upload-strings:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Check for name reuse
        run: |
          BY_COUNT="$(cat app/src/main/res/values/strings.xml | grep 'name="' | sed -e 's/^.*name="//g' | sed -e 's/">.*$//g' | sort | uniq -c | sed -e 's/^ *//g')"
          DUPLICATES="$(printf "0\n$BY_COUNT" | grep -v '^1 ')" # Include extra first line since otherwise grep returns non-zero exit code on no dupes
          printf "SIZE: $(printf "$DUPLICATES" | wc -l)\n"
          if [ "$(printf "$DUPLICATES" | wc -l)" -ne "0" ]
          then
               printf "HAS DUPLICATES"
               exit 1
          fi

      - name: Check for non-positional string arguments
        run: |
          for i in $(ls app/src/main/res/values*/strings.xml)
          do
            echo "Checking $i"
            HAS_PROBLEM=$(cat $i | grep "%.*%" | grep -v "%1\\$" | wc -l)
            if [ "$HAS_PROBLEM" -ne "0" ]
            then
              echo "File $i has non-positional format args"
              exit 1
            fi
          done

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Setup token
        run: |
          mkdir tools/tokens
          echo 'a0db7f62bf50c12de97044e1ca28d2b9' >> tools/tokens/poeditor_token

      # GitHub servers currently come with only version 21 installed. See: https://github.com/actions/virtual-environments/issues/578#issuecomment-605886387
      # For other options, see https://github.com/gradle/gradle/issues/12440#issuecomment-606188282
      #    - name: Install NDK
      #      run: echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager --install "ndk;20.0.5594570"

      - name: Upload strings
        run: ./gradlew uploadStrings
        
