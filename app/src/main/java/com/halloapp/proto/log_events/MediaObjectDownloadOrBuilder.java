// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_events.proto

package com.halloapp.proto.log_events;

public interface MediaObjectDownloadOrBuilder extends
    // @@protoc_insertion_point(interface_extends:server.MediaObjectDownload)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * id of post or message
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * id of post or message
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * 0-based index of the media item in the post/msg
   * </pre>
   *
   * <code>uint64 index = 2;</code>
   * @return The index.
   */
  long getIndex();

  /**
   * <code>.server.MediaObjectDownload.Type type = 3;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <code>.server.MediaObjectDownload.Type type = 3;</code>
   * @return The type.
   */
  com.halloapp.proto.log_events.MediaObjectDownload.Type getType();

  /**
   * <code>.server.MediaObjectDownload.MediaType media_type = 4;</code>
   * @return The enum numeric value on the wire for mediaType.
   */
  int getMediaTypeValue();
  /**
   * <code>.server.MediaObjectDownload.MediaType media_type = 4;</code>
   * @return The mediaType.
   */
  com.halloapp.proto.log_events.MediaObjectDownload.MediaType getMediaType();

  /**
   * <pre>
   * time in ms it took to download the media object
   * </pre>
   *
   * <code>uint64 duration_ms = 5;</code>
   * @return The durationMs.
   */
  long getDurationMs();

  /**
   * <pre>
   * byte size of the object
   * </pre>
   *
   * <code>uint64 size = 6;</code>
   * @return The size.
   */
  long getSize();

  /**
   * <pre>
   * number of bytes downloaded during this attempt
   * </pre>
   *
   * <code>uint64 progress_bytes = 7;</code>
   * @return The progressBytes.
   */
  long getProgressBytes();

  /**
   * <pre>
   * should be cloudfront for now
   * </pre>
   *
   * <code>.server.MediaObjectDownload.Cdn cdn = 8;</code>
   * @return The enum numeric value on the wire for cdn.
   */
  int getCdnValue();
  /**
   * <pre>
   * should be cloudfront for now
   * </pre>
   *
   * <code>.server.MediaObjectDownload.Cdn cdn = 8;</code>
   * @return The cdn.
   */
  com.halloapp.proto.log_events.MediaObjectDownload.Cdn getCdn();

  /**
   * <pre>
   * value of the `x-amz-cf-pop` result header
   * </pre>
   *
   * <code>string cdn_pop = 9;</code>
   * @return The cdnPop.
   */
  java.lang.String getCdnPop();
  /**
   * <pre>
   * value of the `x-amz-cf-pop` result header
   * </pre>
   *
   * <code>string cdn_pop = 9;</code>
   * @return The bytes for cdnPop.
   */
  com.google.protobuf.ByteString
      getCdnPopBytes();

  /**
   * <pre>
   * value of the `x-amz-cf-id` result header
   * </pre>
   *
   * <code>string cdn_id = 10;</code>
   * @return The cdnId.
   */
  java.lang.String getCdnId();
  /**
   * <pre>
   * value of the `x-amz-cf-id` result header
   * </pre>
   *
   * <code>string cdn_id = 10;</code>
   * @return The bytes for cdnId.
   */
  com.google.protobuf.ByteString
      getCdnIdBytes();

  /**
   * <code>.server.MediaObjectDownload.CdnCache cdn_cache = 11;</code>
   * @return The enum numeric value on the wire for cdnCache.
   */
  int getCdnCacheValue();
  /**
   * <code>.server.MediaObjectDownload.CdnCache cdn_cache = 11;</code>
   * @return The cdnCache.
   */
  com.halloapp.proto.log_events.MediaObjectDownload.CdnCache getCdnCache();

  /**
   * <code>.server.MediaObjectDownload.Status status = 12;</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <code>.server.MediaObjectDownload.Status status = 12;</code>
   * @return The status.
   */
  com.halloapp.proto.log_events.MediaObjectDownload.Status getStatus();

  /**
   * <pre>
   * number of attempts to download, either so far or until status=ok
   * </pre>
   *
   * <code>uint64 retry_count = 13;</code>
   * @return The retryCount.
   */
  long getRetryCount();
}
