// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

package com.halloapp.proto.server;

/**
 * Protobuf type {@code server.MomentInfo}
 */
public  final class MomentInfo extends
    com.google.protobuf.GeneratedMessageLite<
        MomentInfo, MomentInfo.Builder> implements
    // @@protoc_insertion_point(message_implements:server.MomentInfo)
    MomentInfoOrBuilder {
  private MomentInfo() {
    date_ = "";
  }
  /**
   * Protobuf enum {@code server.MomentInfo.ContentType}
   */
  public enum ContentType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>IMAGE = 0;</code>
     */
    IMAGE(0),
    /**
     * <code>VIDEO = 1;</code>
     */
    VIDEO(1),
    /**
     * <code>TEXT = 2;</code>
     */
    TEXT(2),
    /**
     * <code>ALBUM_IMAGE = 3;</code>
     */
    ALBUM_IMAGE(3),
    /**
     * <code>ALBUM_DUMP = 4;</code>
     */
    ALBUM_DUMP(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>IMAGE = 0;</code>
     */
    public static final int IMAGE_VALUE = 0;
    /**
     * <code>VIDEO = 1;</code>
     */
    public static final int VIDEO_VALUE = 1;
    /**
     * <code>TEXT = 2;</code>
     */
    public static final int TEXT_VALUE = 2;
    /**
     * <code>ALBUM_IMAGE = 3;</code>
     */
    public static final int ALBUM_IMAGE_VALUE = 3;
    /**
     * <code>ALBUM_DUMP = 4;</code>
     */
    public static final int ALBUM_DUMP_VALUE = 4;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContentType valueOf(int value) {
      return forNumber(value);
    }

    public static ContentType forNumber(int value) {
      switch (value) {
        case 0: return IMAGE;
        case 1: return VIDEO;
        case 2: return TEXT;
        case 3: return ALBUM_IMAGE;
        case 4: return ALBUM_DUMP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ContentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ContentType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ContentType>() {
            @java.lang.Override
            public ContentType findValueByNumber(int number) {
              return ContentType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ContentTypeVerifier.INSTANCE;
    }

    private static final class ContentTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ContentTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return ContentType.forNumber(number) != null;
            }
          };

    private final int value;

    private ContentType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:server.MomentInfo.ContentType)
  }

  public static final int NOTIFICATION_TIMESTAMP_FIELD_NUMBER = 1;
  private long notificationTimestamp_;
  /**
   * <pre>
   * timestamp received from the server in the notification.
   * </pre>
   *
   * <code>int64 notification_timestamp = 1;</code>
   * @return The notificationTimestamp.
   */
  @java.lang.Override
  public long getNotificationTimestamp() {
    return notificationTimestamp_;
  }
  /**
   * <pre>
   * timestamp received from the server in the notification.
   * </pre>
   *
   * <code>int64 notification_timestamp = 1;</code>
   * @param value The notificationTimestamp to set.
   */
  private void setNotificationTimestamp(long value) {
    
    notificationTimestamp_ = value;
  }
  /**
   * <pre>
   * timestamp received from the server in the notification.
   * </pre>
   *
   * <code>int64 notification_timestamp = 1;</code>
   */
  private void clearNotificationTimestamp() {
    
    notificationTimestamp_ = 0L;
  }

  public static final int TIME_TAKEN_FIELD_NUMBER = 2;
  private long timeTaken_;
  /**
   * <pre>
   * Time taken on the moment camera to capture the moment.
   * </pre>
   *
   * <code>int64 time_taken = 2;</code>
   * @return The timeTaken.
   */
  @java.lang.Override
  public long getTimeTaken() {
    return timeTaken_;
  }
  /**
   * <pre>
   * Time taken on the moment camera to capture the moment.
   * </pre>
   *
   * <code>int64 time_taken = 2;</code>
   * @param value The timeTaken to set.
   */
  private void setTimeTaken(long value) {
    
    timeTaken_ = value;
  }
  /**
   * <pre>
   * Time taken on the moment camera to capture the moment.
   * </pre>
   *
   * <code>int64 time_taken = 2;</code>
   */
  private void clearTimeTaken() {
    
    timeTaken_ = 0L;
  }

  public static final int NUM_TAKES_FIELD_NUMBER = 3;
  private long numTakes_;
  /**
   * <pre>
   * Number of times a moment has been captured.
   * </pre>
   *
   * <code>int64 num_takes = 3;</code>
   * @return The numTakes.
   */
  @java.lang.Override
  public long getNumTakes() {
    return numTakes_;
  }
  /**
   * <pre>
   * Number of times a moment has been captured.
   * </pre>
   *
   * <code>int64 num_takes = 3;</code>
   * @param value The numTakes to set.
   */
  private void setNumTakes(long value) {
    
    numTakes_ = value;
  }
  /**
   * <pre>
   * Number of times a moment has been captured.
   * </pre>
   *
   * <code>int64 num_takes = 3;</code>
   */
  private void clearNumTakes() {
    
    numTakes_ = 0L;
  }

  public static final int NUM_SELFIE_TAKES_FIELD_NUMBER = 4;
  private long numSelfieTakes_;
  /**
   * <pre>
   * Number of times the selfie view has been captured.
   * </pre>
   *
   * <code>int64 num_selfie_takes = 4;</code>
   * @return The numSelfieTakes.
   */
  @java.lang.Override
  public long getNumSelfieTakes() {
    return numSelfieTakes_;
  }
  /**
   * <pre>
   * Number of times the selfie view has been captured.
   * </pre>
   *
   * <code>int64 num_selfie_takes = 4;</code>
   * @param value The numSelfieTakes to set.
   */
  private void setNumSelfieTakes(long value) {
    
    numSelfieTakes_ = value;
  }
  /**
   * <pre>
   * Number of times the selfie view has been captured.
   * </pre>
   *
   * <code>int64 num_selfie_takes = 4;</code>
   */
  private void clearNumSelfieTakes() {
    
    numSelfieTakes_ = 0L;
  }

  public static final int NOTIFICATION_ID_FIELD_NUMBER = 5;
  private long notificationId_;
  /**
   * <pre>
   * Id of the notification that resulted in the user posting this moment.
   * </pre>
   *
   * <code>int64 notification_id = 5;</code>
   * @return The notificationId.
   */
  @java.lang.Override
  public long getNotificationId() {
    return notificationId_;
  }
  /**
   * <pre>
   * Id of the notification that resulted in the user posting this moment.
   * </pre>
   *
   * <code>int64 notification_id = 5;</code>
   * @param value The notificationId to set.
   */
  private void setNotificationId(long value) {
    
    notificationId_ = value;
  }
  /**
   * <pre>
   * Id of the notification that resulted in the user posting this moment.
   * </pre>
   *
   * <code>int64 notification_id = 5;</code>
   */
  private void clearNotificationId() {
    
    notificationId_ = 0L;
  }

  public static final int CONTENT_TYPE_FIELD_NUMBER = 6;
  private int contentType_;
  /**
   * <pre>
   * Actual content type based on moment notification info.
   * </pre>
   *
   * <code>.server.MomentInfo.ContentType content_type = 6;</code>
   * @return The enum numeric value on the wire for contentType.
   */
  @java.lang.Override
  public int getContentTypeValue() {
    return contentType_;
  }
  /**
   * <pre>
   * Actual content type based on moment notification info.
   * </pre>
   *
   * <code>.server.MomentInfo.ContentType content_type = 6;</code>
   * @return The contentType.
   */
  @java.lang.Override
  public com.halloapp.proto.server.MomentInfo.ContentType getContentType() {
    com.halloapp.proto.server.MomentInfo.ContentType result = com.halloapp.proto.server.MomentInfo.ContentType.forNumber(contentType_);
    return result == null ? com.halloapp.proto.server.MomentInfo.ContentType.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Actual content type based on moment notification info.
   * </pre>
   *
   * <code>.server.MomentInfo.ContentType content_type = 6;</code>
   * @param value The enum numeric value on the wire for contentType to set.
   */
  private void setContentTypeValue(int value) {
      contentType_ = value;
  }
  /**
   * <pre>
   * Actual content type based on moment notification info.
   * </pre>
   *
   * <code>.server.MomentInfo.ContentType content_type = 6;</code>
   * @param value The contentType to set.
   */
  private void setContentType(com.halloapp.proto.server.MomentInfo.ContentType value) {
    contentType_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Actual content type based on moment notification info.
   * </pre>
   *
   * <code>.server.MomentInfo.ContentType content_type = 6;</code>
   */
  private void clearContentType() {
    
    contentType_ = 0;
  }

  public static final int DATE_FIELD_NUMBER = 7;
  private java.lang.String date_;
  /**
   * <pre>
   * Date received with the notification in the format: DD/MM/YYYY.
   * </pre>
   *
   * <code>string date = 7;</code>
   * @return The date.
   */
  @java.lang.Override
  public java.lang.String getDate() {
    return date_;
  }
  /**
   * <pre>
   * Date received with the notification in the format: DD/MM/YYYY.
   * </pre>
   *
   * <code>string date = 7;</code>
   * @return The bytes for date.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDateBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(date_);
  }
  /**
   * <pre>
   * Date received with the notification in the format: DD/MM/YYYY.
   * </pre>
   *
   * <code>string date = 7;</code>
   * @param value The date to set.
   */
  private void setDate(
      java.lang.String value) {
    value.getClass();
  
    date_ = value;
  }
  /**
   * <pre>
   * Date received with the notification in the format: DD/MM/YYYY.
   * </pre>
   *
   * <code>string date = 7;</code>
   */
  private void clearDate() {
    
    date_ = getDefaultInstance().getDate();
  }
  /**
   * <pre>
   * Date received with the notification in the format: DD/MM/YYYY.
   * </pre>
   *
   * <code>string date = 7;</code>
   * @param value The bytes for date to set.
   */
  private void setDateBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    date_ = value.toStringUtf8();
    
  }

  public static com.halloapp.proto.server.MomentInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.halloapp.proto.server.MomentInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.halloapp.proto.server.MomentInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.halloapp.proto.server.MomentInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.halloapp.proto.server.MomentInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.halloapp.proto.server.MomentInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.halloapp.proto.server.MomentInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.halloapp.proto.server.MomentInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.halloapp.proto.server.MomentInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.halloapp.proto.server.MomentInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.halloapp.proto.server.MomentInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.halloapp.proto.server.MomentInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.halloapp.proto.server.MomentInfo prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code server.MomentInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.halloapp.proto.server.MomentInfo, Builder> implements
      // @@protoc_insertion_point(builder_implements:server.MomentInfo)
      com.halloapp.proto.server.MomentInfoOrBuilder {
    // Construct using com.halloapp.proto.server.MomentInfo.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * timestamp received from the server in the notification.
     * </pre>
     *
     * <code>int64 notification_timestamp = 1;</code>
     * @return The notificationTimestamp.
     */
    @java.lang.Override
    public long getNotificationTimestamp() {
      return instance.getNotificationTimestamp();
    }
    /**
     * <pre>
     * timestamp received from the server in the notification.
     * </pre>
     *
     * <code>int64 notification_timestamp = 1;</code>
     * @param value The notificationTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setNotificationTimestamp(long value) {
      copyOnWrite();
      instance.setNotificationTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * timestamp received from the server in the notification.
     * </pre>
     *
     * <code>int64 notification_timestamp = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearNotificationTimestamp() {
      copyOnWrite();
      instance.clearNotificationTimestamp();
      return this;
    }

    /**
     * <pre>
     * Time taken on the moment camera to capture the moment.
     * </pre>
     *
     * <code>int64 time_taken = 2;</code>
     * @return The timeTaken.
     */
    @java.lang.Override
    public long getTimeTaken() {
      return instance.getTimeTaken();
    }
    /**
     * <pre>
     * Time taken on the moment camera to capture the moment.
     * </pre>
     *
     * <code>int64 time_taken = 2;</code>
     * @param value The timeTaken to set.
     * @return This builder for chaining.
     */
    public Builder setTimeTaken(long value) {
      copyOnWrite();
      instance.setTimeTaken(value);
      return this;
    }
    /**
     * <pre>
     * Time taken on the moment camera to capture the moment.
     * </pre>
     *
     * <code>int64 time_taken = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimeTaken() {
      copyOnWrite();
      instance.clearTimeTaken();
      return this;
    }

    /**
     * <pre>
     * Number of times a moment has been captured.
     * </pre>
     *
     * <code>int64 num_takes = 3;</code>
     * @return The numTakes.
     */
    @java.lang.Override
    public long getNumTakes() {
      return instance.getNumTakes();
    }
    /**
     * <pre>
     * Number of times a moment has been captured.
     * </pre>
     *
     * <code>int64 num_takes = 3;</code>
     * @param value The numTakes to set.
     * @return This builder for chaining.
     */
    public Builder setNumTakes(long value) {
      copyOnWrite();
      instance.setNumTakes(value);
      return this;
    }
    /**
     * <pre>
     * Number of times a moment has been captured.
     * </pre>
     *
     * <code>int64 num_takes = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumTakes() {
      copyOnWrite();
      instance.clearNumTakes();
      return this;
    }

    /**
     * <pre>
     * Number of times the selfie view has been captured.
     * </pre>
     *
     * <code>int64 num_selfie_takes = 4;</code>
     * @return The numSelfieTakes.
     */
    @java.lang.Override
    public long getNumSelfieTakes() {
      return instance.getNumSelfieTakes();
    }
    /**
     * <pre>
     * Number of times the selfie view has been captured.
     * </pre>
     *
     * <code>int64 num_selfie_takes = 4;</code>
     * @param value The numSelfieTakes to set.
     * @return This builder for chaining.
     */
    public Builder setNumSelfieTakes(long value) {
      copyOnWrite();
      instance.setNumSelfieTakes(value);
      return this;
    }
    /**
     * <pre>
     * Number of times the selfie view has been captured.
     * </pre>
     *
     * <code>int64 num_selfie_takes = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumSelfieTakes() {
      copyOnWrite();
      instance.clearNumSelfieTakes();
      return this;
    }

    /**
     * <pre>
     * Id of the notification that resulted in the user posting this moment.
     * </pre>
     *
     * <code>int64 notification_id = 5;</code>
     * @return The notificationId.
     */
    @java.lang.Override
    public long getNotificationId() {
      return instance.getNotificationId();
    }
    /**
     * <pre>
     * Id of the notification that resulted in the user posting this moment.
     * </pre>
     *
     * <code>int64 notification_id = 5;</code>
     * @param value The notificationId to set.
     * @return This builder for chaining.
     */
    public Builder setNotificationId(long value) {
      copyOnWrite();
      instance.setNotificationId(value);
      return this;
    }
    /**
     * <pre>
     * Id of the notification that resulted in the user posting this moment.
     * </pre>
     *
     * <code>int64 notification_id = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearNotificationId() {
      copyOnWrite();
      instance.clearNotificationId();
      return this;
    }

    /**
     * <pre>
     * Actual content type based on moment notification info.
     * </pre>
     *
     * <code>.server.MomentInfo.ContentType content_type = 6;</code>
     * @return The enum numeric value on the wire for contentType.
     */
    @java.lang.Override
    public int getContentTypeValue() {
      return instance.getContentTypeValue();
    }
    /**
     * <pre>
     * Actual content type based on moment notification info.
     * </pre>
     *
     * <code>.server.MomentInfo.ContentType content_type = 6;</code>
     * @param value The contentType to set.
     * @return This builder for chaining.
     */
    public Builder setContentTypeValue(int value) {
      copyOnWrite();
      instance.setContentTypeValue(value);
      return this;
    }
    /**
     * <pre>
     * Actual content type based on moment notification info.
     * </pre>
     *
     * <code>.server.MomentInfo.ContentType content_type = 6;</code>
     * @return The contentType.
     */
    @java.lang.Override
    public com.halloapp.proto.server.MomentInfo.ContentType getContentType() {
      return instance.getContentType();
    }
    /**
     * <pre>
     * Actual content type based on moment notification info.
     * </pre>
     *
     * <code>.server.MomentInfo.ContentType content_type = 6;</code>
     * @param value The enum numeric value on the wire for contentType to set.
     * @return This builder for chaining.
     */
    public Builder setContentType(com.halloapp.proto.server.MomentInfo.ContentType value) {
      copyOnWrite();
      instance.setContentType(value);
      return this;
    }
    /**
     * <pre>
     * Actual content type based on moment notification info.
     * </pre>
     *
     * <code>.server.MomentInfo.ContentType content_type = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearContentType() {
      copyOnWrite();
      instance.clearContentType();
      return this;
    }

    /**
     * <pre>
     * Date received with the notification in the format: DD/MM/YYYY.
     * </pre>
     *
     * <code>string date = 7;</code>
     * @return The date.
     */
    @java.lang.Override
    public java.lang.String getDate() {
      return instance.getDate();
    }
    /**
     * <pre>
     * Date received with the notification in the format: DD/MM/YYYY.
     * </pre>
     *
     * <code>string date = 7;</code>
     * @return The bytes for date.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDateBytes() {
      return instance.getDateBytes();
    }
    /**
     * <pre>
     * Date received with the notification in the format: DD/MM/YYYY.
     * </pre>
     *
     * <code>string date = 7;</code>
     * @param value The date to set.
     * @return This builder for chaining.
     */
    public Builder setDate(
        java.lang.String value) {
      copyOnWrite();
      instance.setDate(value);
      return this;
    }
    /**
     * <pre>
     * Date received with the notification in the format: DD/MM/YYYY.
     * </pre>
     *
     * <code>string date = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDate() {
      copyOnWrite();
      instance.clearDate();
      return this;
    }
    /**
     * <pre>
     * Date received with the notification in the format: DD/MM/YYYY.
     * </pre>
     *
     * <code>string date = 7;</code>
     * @param value The bytes for date to set.
     * @return This builder for chaining.
     */
    public Builder setDateBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDateBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:server.MomentInfo)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.halloapp.proto.server.MomentInfo();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "notificationTimestamp_",
            "timeTaken_",
            "numTakes_",
            "numSelfieTakes_",
            "notificationId_",
            "contentType_",
            "date_",
          };
          java.lang.String info =
              "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0000\u0000\u0001\u0002\u0002\u0002" +
              "\u0003\u0002\u0004\u0002\u0005\u0002\u0006\f\u0007\u0208";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.halloapp.proto.server.MomentInfo> parser = PARSER;
        if (parser == null) {
          synchronized (com.halloapp.proto.server.MomentInfo.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.halloapp.proto.server.MomentInfo>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:server.MomentInfo)
  private static final com.halloapp.proto.server.MomentInfo DEFAULT_INSTANCE;
  static {
    MomentInfo defaultInstance = new MomentInfo();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      MomentInfo.class, defaultInstance);
  }

  public static com.halloapp.proto.server.MomentInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<MomentInfo> PARSER;

  public static com.google.protobuf.Parser<MomentInfo> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

