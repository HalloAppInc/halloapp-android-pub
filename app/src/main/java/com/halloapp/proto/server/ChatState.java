// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

package com.halloapp.proto.server;

/**
 * Protobuf type {@code server.ChatState}
 */
public  final class ChatState extends
    com.google.protobuf.GeneratedMessageLite<
        ChatState, ChatState.Builder> implements
    // @@protoc_insertion_point(message_implements:server.ChatState)
    ChatStateOrBuilder {
  private ChatState() {
    threadId_ = "";
  }
  /**
   * Protobuf enum {@code server.ChatState.Type}
   */
  public enum Type
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>AVAILABLE = 0;</code>
     */
    AVAILABLE(0),
    /**
     * <code>TYPING = 1;</code>
     */
    TYPING(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AVAILABLE = 0;</code>
     */
    public static final int AVAILABLE_VALUE = 0;
    /**
     * <code>TYPING = 1;</code>
     */
    public static final int TYPING_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    public static Type forNumber(int value) {
      switch (value) {
        case 0: return AVAILABLE;
        case 1: return TYPING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            @java.lang.Override
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return TypeVerifier.INSTANCE;
    }

    private static final class TypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Type.forNumber(number) != null;
            }
          };

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:server.ChatState.Type)
  }

  /**
   * Protobuf enum {@code server.ChatState.ThreadType}
   */
  public enum ThreadType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CHAT = 0;</code>
     */
    CHAT(0),
    /**
     * <code>GROUP_CHAT = 1;</code>
     */
    GROUP_CHAT(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CHAT = 0;</code>
     */
    public static final int CHAT_VALUE = 0;
    /**
     * <code>GROUP_CHAT = 1;</code>
     */
    public static final int GROUP_CHAT_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ThreadType valueOf(int value) {
      return forNumber(value);
    }

    public static ThreadType forNumber(int value) {
      switch (value) {
        case 0: return CHAT;
        case 1: return GROUP_CHAT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ThreadType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ThreadType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThreadType>() {
            @java.lang.Override
            public ThreadType findValueByNumber(int number) {
              return ThreadType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ThreadTypeVerifier.INSTANCE;
    }

    private static final class ThreadTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ThreadTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return ThreadType.forNumber(number) != null;
            }
          };

    private final int value;

    private ThreadType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:server.ChatState.ThreadType)
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <code>.server.ChatState.Type type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override
  public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.server.ChatState.Type type = 1;</code>
   * @return The type.
   */
  @java.lang.Override
  public com.halloapp.proto.server.ChatState.Type getType() {
    com.halloapp.proto.server.ChatState.Type result = com.halloapp.proto.server.ChatState.Type.forNumber(type_);
    return result == null ? com.halloapp.proto.server.ChatState.Type.UNRECOGNIZED : result;
  }
  /**
   * <code>.server.ChatState.Type type = 1;</code>
   * @param value The enum numeric value on the wire for type to set.
   */
  private void setTypeValue(int value) {
      type_ = value;
  }
  /**
   * <code>.server.ChatState.Type type = 1;</code>
   * @param value The type to set.
   */
  private void setType(com.halloapp.proto.server.ChatState.Type value) {
    type_ = value.getNumber();
    
  }
  /**
   * <code>.server.ChatState.Type type = 1;</code>
   */
  private void clearType() {
    
    type_ = 0;
  }

  public static final int THREAD_ID_FIELD_NUMBER = 2;
  private java.lang.String threadId_;
  /**
   * <code>string thread_id = 2;</code>
   * @return The threadId.
   */
  @java.lang.Override
  public java.lang.String getThreadId() {
    return threadId_;
  }
  /**
   * <code>string thread_id = 2;</code>
   * @return The bytes for threadId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getThreadIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(threadId_);
  }
  /**
   * <code>string thread_id = 2;</code>
   * @param value The threadId to set.
   */
  private void setThreadId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    threadId_ = value;
  }
  /**
   * <code>string thread_id = 2;</code>
   */
  private void clearThreadId() {
    
    threadId_ = getDefaultInstance().getThreadId();
  }
  /**
   * <code>string thread_id = 2;</code>
   * @param value The bytes for threadId to set.
   */
  private void setThreadIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    threadId_ = value.toStringUtf8();
    
  }

  public static final int THREAD_TYPE_FIELD_NUMBER = 3;
  private int threadType_;
  /**
   * <code>.server.ChatState.ThreadType thread_type = 3;</code>
   * @return The enum numeric value on the wire for threadType.
   */
  @java.lang.Override
  public int getThreadTypeValue() {
    return threadType_;
  }
  /**
   * <code>.server.ChatState.ThreadType thread_type = 3;</code>
   * @return The threadType.
   */
  @java.lang.Override
  public com.halloapp.proto.server.ChatState.ThreadType getThreadType() {
    com.halloapp.proto.server.ChatState.ThreadType result = com.halloapp.proto.server.ChatState.ThreadType.forNumber(threadType_);
    return result == null ? com.halloapp.proto.server.ChatState.ThreadType.UNRECOGNIZED : result;
  }
  /**
   * <code>.server.ChatState.ThreadType thread_type = 3;</code>
   * @param value The enum numeric value on the wire for threadType to set.
   */
  private void setThreadTypeValue(int value) {
      threadType_ = value;
  }
  /**
   * <code>.server.ChatState.ThreadType thread_type = 3;</code>
   * @param value The threadType to set.
   */
  private void setThreadType(com.halloapp.proto.server.ChatState.ThreadType value) {
    threadType_ = value.getNumber();
    
  }
  /**
   * <code>.server.ChatState.ThreadType thread_type = 3;</code>
   */
  private void clearThreadType() {
    
    threadType_ = 0;
  }

  public static final int FROM_UID_FIELD_NUMBER = 4;
  private long fromUid_;
  /**
   * <code>int64 from_uid = 4;</code>
   * @return The fromUid.
   */
  @java.lang.Override
  public long getFromUid() {
    return fromUid_;
  }
  /**
   * <code>int64 from_uid = 4;</code>
   * @param value The fromUid to set.
   */
  private void setFromUid(long value) {
    
    fromUid_ = value;
  }
  /**
   * <code>int64 from_uid = 4;</code>
   */
  private void clearFromUid() {
    
    fromUid_ = 0L;
  }

  public static com.halloapp.proto.server.ChatState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.halloapp.proto.server.ChatState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.halloapp.proto.server.ChatState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.halloapp.proto.server.ChatState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.halloapp.proto.server.ChatState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.halloapp.proto.server.ChatState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.halloapp.proto.server.ChatState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.halloapp.proto.server.ChatState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.halloapp.proto.server.ChatState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.halloapp.proto.server.ChatState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.halloapp.proto.server.ChatState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.halloapp.proto.server.ChatState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.halloapp.proto.server.ChatState prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code server.ChatState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.halloapp.proto.server.ChatState, Builder> implements
      // @@protoc_insertion_point(builder_implements:server.ChatState)
      com.halloapp.proto.server.ChatStateOrBuilder {
    // Construct using com.halloapp.proto.server.ChatState.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>.server.ChatState.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return instance.getTypeValue();
    }
    /**
     * <code>.server.ChatState.Type type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      copyOnWrite();
      instance.setTypeValue(value);
      return this;
    }
    /**
     * <code>.server.ChatState.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.halloapp.proto.server.ChatState.Type getType() {
      return instance.getType();
    }
    /**
     * <code>.server.ChatState.Type type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.halloapp.proto.server.ChatState.Type value) {
      copyOnWrite();
      instance.setType(value);
      return this;
    }
    /**
     * <code>.server.ChatState.Type type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }

    /**
     * <code>string thread_id = 2;</code>
     * @return The threadId.
     */
    @java.lang.Override
    public java.lang.String getThreadId() {
      return instance.getThreadId();
    }
    /**
     * <code>string thread_id = 2;</code>
     * @return The bytes for threadId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getThreadIdBytes() {
      return instance.getThreadIdBytes();
    }
    /**
     * <code>string thread_id = 2;</code>
     * @param value The threadId to set.
     * @return This builder for chaining.
     */
    public Builder setThreadId(
        java.lang.String value) {
      copyOnWrite();
      instance.setThreadId(value);
      return this;
    }
    /**
     * <code>string thread_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearThreadId() {
      copyOnWrite();
      instance.clearThreadId();
      return this;
    }
    /**
     * <code>string thread_id = 2;</code>
     * @param value The bytes for threadId to set.
     * @return This builder for chaining.
     */
    public Builder setThreadIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setThreadIdBytes(value);
      return this;
    }

    /**
     * <code>.server.ChatState.ThreadType thread_type = 3;</code>
     * @return The enum numeric value on the wire for threadType.
     */
    @java.lang.Override
    public int getThreadTypeValue() {
      return instance.getThreadTypeValue();
    }
    /**
     * <code>.server.ChatState.ThreadType thread_type = 3;</code>
     * @param value The threadType to set.
     * @return This builder for chaining.
     */
    public Builder setThreadTypeValue(int value) {
      copyOnWrite();
      instance.setThreadTypeValue(value);
      return this;
    }
    /**
     * <code>.server.ChatState.ThreadType thread_type = 3;</code>
     * @return The threadType.
     */
    @java.lang.Override
    public com.halloapp.proto.server.ChatState.ThreadType getThreadType() {
      return instance.getThreadType();
    }
    /**
     * <code>.server.ChatState.ThreadType thread_type = 3;</code>
     * @param value The enum numeric value on the wire for threadType to set.
     * @return This builder for chaining.
     */
    public Builder setThreadType(com.halloapp.proto.server.ChatState.ThreadType value) {
      copyOnWrite();
      instance.setThreadType(value);
      return this;
    }
    /**
     * <code>.server.ChatState.ThreadType thread_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearThreadType() {
      copyOnWrite();
      instance.clearThreadType();
      return this;
    }

    /**
     * <code>int64 from_uid = 4;</code>
     * @return The fromUid.
     */
    @java.lang.Override
    public long getFromUid() {
      return instance.getFromUid();
    }
    /**
     * <code>int64 from_uid = 4;</code>
     * @param value The fromUid to set.
     * @return This builder for chaining.
     */
    public Builder setFromUid(long value) {
      copyOnWrite();
      instance.setFromUid(value);
      return this;
    }
    /**
     * <code>int64 from_uid = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFromUid() {
      copyOnWrite();
      instance.clearFromUid();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:server.ChatState)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.halloapp.proto.server.ChatState();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "type_",
            "threadId_",
            "threadType_",
            "fromUid_",
          };
          java.lang.String info =
              "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\f\u0002\u0208" +
              "\u0003\f\u0004\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.halloapp.proto.server.ChatState> parser = PARSER;
        if (parser == null) {
          synchronized (com.halloapp.proto.server.ChatState.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.halloapp.proto.server.ChatState>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:server.ChatState)
  private static final com.halloapp.proto.server.ChatState DEFAULT_INSTANCE;
  static {
    ChatState defaultInstance = new ChatState();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ChatState.class, defaultInstance);
  }

  public static com.halloapp.proto.server.ChatState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ChatState> PARSER;

  public static com.google.protobuf.Parser<ChatState> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

