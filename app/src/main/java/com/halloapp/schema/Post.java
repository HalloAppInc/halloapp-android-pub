// automatically generated by the FlatBuffers compiler, do not modify

package com.halloapp.schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Post extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static Post getRootAsPost(ByteBuffer _bb) { return getRootAsPost(_bb, new Post()); }
  public static Post getRootAsPost(ByteBuffer _bb, Post obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Post __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public com.halloapp.schema.Media media(int j) { return media(new com.halloapp.schema.Media(), j); }
  public com.halloapp.schema.Media media(com.halloapp.schema.Media obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int mediaLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public com.halloapp.schema.Media.Vector mediaVector() { return mediaVector(new com.halloapp.schema.Media.Vector()); }
  public com.halloapp.schema.Media.Vector mediaVector(com.halloapp.schema.Media.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String text() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer textAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer textInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createPost(FlatBufferBuilder builder,
      int mediaOffset,
      int textOffset) {
    builder.startTable(2);
    Post.addText(builder, textOffset);
    Post.addMedia(builder, mediaOffset);
    return Post.endPost(builder);
  }

  public static void startPost(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addMedia(FlatBufferBuilder builder, int mediaOffset) { builder.addOffset(0, mediaOffset, 0); }
  public static int createMediaVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMediaVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addText(FlatBufferBuilder builder, int textOffset) { builder.addOffset(1, textOffset, 0); }
  public static int endPost(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Post get(int j) { return get(new Post(), j); }
    public Post get(Post obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

